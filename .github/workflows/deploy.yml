name: Deploy MERN App to Google Cloud Run

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy Backend & Frontend to Google Cloud Run
    runs-on: ubuntu-latest

    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      REPO_NAME: ${{ secrets.GCP_REPO_NAME }}
      LOCATION: ${{ secrets.GCP_LOCATION }}
      OCR_ID: ${{ secrets.GCP_OCR_ID }}
      PROCESSOR_ID: ${{ secrets.GCP_PROCESSOR_ID}}
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY}}
      INVOICE_ID: ${{ secrets.GCP_INVOICE_ID}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker Authentication for Artifact Registry
        run: gcloud auth configure-docker asia-south2-docker.pkg.dev

      - name: Set up Docker Buildx
        # This action ensures Docker Buildx is properly initialized and available.
        uses: docker/setup-buildx-action@v2

      # --- Backend Deployment ---
      - name: Verify Backend Directory Exists
        # Check if the './backend' directory exists before attempting to build.
        # This helps catch issues if the directory path is incorrect or missing.
        run: |
          if [ ! -d "./backend" ]; then
            echo "Error: Backend directory './backend' not found at $(pwd)"
            exit 1
          fi
          echo "Backend directory './backend' found. Proceeding with build."

      - name: Build and Push Backend Docker Image
        # Builds the Docker image for the backend and pushes it to Google Artifact Registry.
        # We're using a shell variable for the tag and explicit quoting for robustness.
        run: |
          BACKEND_IMAGE_TAG="asia-south2-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/backend:latest"
          echo "--- Debugging Backend Build Command ---"
          echo "Full command to be executed: docker buildx build ./backend --tag \"$BACKEND_IMAGE_TAG\" --push"
          echo "PROJECT_ID: ${{ env.PROJECT_ID }}"
          echo "REPO_NAME: ${{ env.REPO_NAME }}"
          echo "Generated Backend Image Tag: $BACKEND_IMAGE_TAG"
          echo "--- End Debugging ---"
          
          docker buildx build ./backend --tag "$BACKEND_IMAGE_TAG" --push

      - name: Deploy Backend to Cloud Run
        run: |
          gcloud run deploy backend-service \
            --image asia-south2-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/backend:latest \
            --region asia-south2 \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars="GCP_PROJECT_ID=${{ env.PROJECT_ID }},GCP_LOCATION=${{ env.LOCATION }},GCP_PROCESSOR_ID=${{ env.PROCESSOR_ID }},GCP_OCR_ID=${{ env.OCR_ID }},GCP_INVOICE_ID=${{ env.INVOICE_ID }},GEMINI_API_KEY=${{ env.GEMINI_API_KEY }}"

      # --- Frontend Deployment ---
      - name: Verify Frontend Directory Exists
        run: |
          if [ ! -d "./frontend" ]; then
            echo "Error: Frontend directory './frontend' not found at $(pwd)"
            exit 1
          fi
          echo "Frontend directory './frontend' found. Proceeding with build."

      - name: Build and Push Frontend Docker Image
        # Builds the Docker image for the frontend and pushes it to Google Artifact Registry.
        # Similar to backend, using a shell variable and explicit quoting.
        run: |
          FRONTEND_IMAGE_TAG="asia-south2-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/frontend:latest"
          echo "--- Debugging Frontend Build Command ---"
          echo "Full command to be executed: docker buildx build ./frontend --tag \"$FRONTEND_IMAGE_TAG\" --push"
          echo "PROJECT_ID: ${{ env.PROJECT_ID }}"
          echo "REPO_NAME: ${{ env.REPO_NAME }}"
          echo "Generated Frontend Image Tag: $FRONTEND_IMAGE_TAG"
          echo "--- End Debugging ---"

          docker buildx build ./frontend --tag "$FRONTEND_IMAGE_TAG" --push

      - name: Deploy Frontend to Cloud Run
        run: |
          gcloud run deploy doc-aid \
            --image asia-south2-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/frontend:latest \
            --region asia-south2 \
            --platform managed \
            --allow-unauthenticated
